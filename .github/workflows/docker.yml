name: Publish Docker Image

on:
  # push:
  #   branches:
  #     - master
  workflow_dispatch:
  schedule:
    - cron: "0 19 * * *" #
# 仅取消针对当前工作流正在进行的作业或运行
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Login to Alibaba Cloud Container Registry
        uses: docker/login-action@v3
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PASSWORD }}
      - name: Extract Docker metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          # 发布到 registry.cn-hangzhou.aliyuncs.com
          images: |
            registry.cn-hangzhou.aliyuncs.com/caomeiyouren/rsshub
          tags: |
            type=raw,value=latest,enable=true
            type=raw,value={{date 'YYYY-MM-DD'}},enable=true
          flavor: latest=false
      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: "latest"
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "pnpm"
      - name: Cache Dependency
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ~/.yarn
            ~/.cache/pnpm
            ~/cache
            !~/cache/exclude
            **/node_modules
          key: pnpm-${{ runner.os }}-${{ hashFiles('package.json') }}
          restore-keys: pnpm-${{ runner.os }}
      - run: pnpm i --frozen-lockfile
      - run: pnpm run dev
        env:
          DOCKER_TAGS: ${{ steps.metadata.outputs.tags }}
      - name: Commit files
        id: commit-files
        run: |
          if [ -n "$(git status --porcelain README.md)" ]; then
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git add README.md
            git commit -m "docs: update docker version [skip ci]"
            echo "hasChange=true" >> $GITHUB_OUTPUT
          else
            echo "No changes detected"
          fi
      - name: Push changes
        uses: ad-m/github-push-action@master
        if: ${{ steps.commit-files.outputs.hasChange == 'true' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
      # - name: Deploy to Jenkins
      #   run: curl -X GET -L --user ${{ secrets.JENKINS_TOKEN }} "${{ secrets.JENKINS_URL }}/buildWithParameters?token=${{ secrets.JENKINS_JOB_TOKEN }}&DOCKER_IMAGE=registry.cn-hangzhou.aliyuncs.com/${{ env.REPO }}:${{ env.TAG }}"
